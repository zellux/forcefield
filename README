
* 编码规范
输入输出：统一使用UTF-8
内存存储：使用unicode字符集

* 脚本调用流程
1. 用户访问URL
2. Web服务器获得请求，执行相应的脚本
   a. GET方法的参数通过命令行参数传递
   b. 为了避免引号、空格等问题，参数通过BASE64加码传递
3. 脚本解析命令行参数，并用BASE64解码获得GET方法的参数
4. GET方法的参数由unicode方法转换成unicode字符集表示
5. 脚本执行结果输出到stdout
6. Web服务器获得脚本的标准输出，返回给用户

* 解析模块
Scope类
记录代码块的变量、作用域

** 变量作用域
类似Python，for/while等语句不会创建新的作用域（和外层共享），函数调用会创建新的作用域，但仍能访问外层作用域的变量

但和Python不同的是，Python中函数对外层作用域的访问是只读的，例如这个程序是非法的：
def f():
    x += 1

x = 0
f()

在FieldForce语言中，拥有类似语义的这个程序则是被允许的：
FUNC F()
     SET x = x + 1
     RETURN x
END

SET x = 0
CALL F()
RETURN x

* 回归测试
新增了ASSERT命令用于检查某个变量的值，当表达式不满足时，程序显示错误，并立即退出

* 关键字
SET
FUNC
ASSERT
CALL
IF
FOR
WHILE
RETURN